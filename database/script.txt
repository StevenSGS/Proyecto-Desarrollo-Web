CREATE SCHEMA cafeteria_db;
CREATE USER 'usuario'@'localhost' IDENTIFIED BY 'contrase√±a';
GRANT ALL PRIVILEGES ON cafeteria_db.* TO 'usuario'@'localhost';
FLUSH PRIVILEGES;

USE cafeteria_db;

CREATE TABLE usuario (
  id_usuario INT NOT NULL AUTO_INCREMENT,
  username VARCHAR(100) NOT NULL,
  password VARCHAR(255) NOT NULL,
  nombre VARCHAR(100) NOT NULL,
  apellidos VARCHAR(100),
  correo VARCHAR(100),
  rol VARCHAR(50) NOT NULL,
  PRIMARY KEY (id_usuario)
);

CREATE TABLE categoria_producto (
  id_categoria INT NOT NULL AUTO_INCREMENT,
  nombre_categoria VARCHAR(100) NOT NULL,
  disponible BOOLEAN DEFAULT TRUE,
  PRIMARY KEY (id_categoria)
);

CREATE TABLE producto (
  id_producto INT NOT NULL AUTO_INCREMENT,
  id_categoria INT NOT NULL,
  nombre_producto VARCHAR(100) NOT NULL,
  descripcion VARCHAR(255),
  precio DOUBLE NOT NULL,
  ruta_imagen VARCHAR(1024),
  estado BOOLEAN DEFAULT TRUE,
  PRIMARY KEY (id_producto),
  FOREIGN KEY (id_categoria) REFERENCES categoria_producto(id_categoria)
);

CREATE TABLE pedido (
  id_pedido INT NOT NULL AUTO_INCREMENT,
  id_usuario INT NOT NULL,
  fecha_hora_pedido DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  total_pedido DOUBLE NOT NULL,
  estado_pedido VARCHAR(100) NOT NULL DEFAULT 'Pendiente',
  PRIMARY KEY (id_pedido),
  FOREIGN KEY (id_usuario) REFERENCES usuario(id_usuario)
);

CREATE TABLE detalle_pedido (
  id_detalle_pedido INT NOT NULL AUTO_INCREMENT,
  id_pedido INT NOT NULL,
  id_producto INT NOT NULL,
  cantidad INT NOT NULL,
  precio_unidad DOUBLE NOT NULL,
  PRIMARY KEY (id_detalle_pedido),
  FOREIGN KEY (id_pedido) REFERENCES pedido(id_pedido),
  FOREIGN KEY (id_producto) REFERENCES producto(id_producto)
);

CREATE TABLE reserva (
  id_reserva INT NOT NULL AUTO_INCREMENT,
  id_usuario INT NOT NULL,
  fecha_reserva DATE NOT NULL,
  hora_reserva TIME NOT NULL,
  cantidad_personas INT NOT NULL,
  estado_reserva VARCHAR(50) NOT NULL DEFAULT,
  PRIMARY KEY (id_reserva),
  FOREIGN KEY (id_usuario) REFERENCES usuario(id_usuario)
);